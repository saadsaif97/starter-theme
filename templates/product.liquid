{{ 'splide-skyblue.min.css' | asset_url | stylesheet_tag }}
<script src="{{ 'splide.min.js' | asset_url }}"></script>
<style>
  .splide {
    margin: 0 auto;
  }

  .thumbnails {
    display: flex;
    margin: 1rem auto 0;
    padding: 0;
    justify-content: center;
  }

  .thumbnail {
    width: 70px;
    height: 70px;
    overflow: hidden;
    list-style: none;
    margin: 0 0.2rem;
    cursor: pointer;
    opacity: 0.3;
  }

  .splide__slide.is-active {
    min-width: 500px;
  }

  .thumbnail.is-active {
    opacity: 1;
  }

  .thumbnail img {
    width: 100%;
    height: auto;
  }
</style>

<div class="product-page">
  <!-- Left Pane: Images -->
  <div class="product-images">
    <section id="main-slider" class="splide" aria-label="My Awesome Gallery">
      <div class="splide__track">
        <ul class="splide__list">
          {%- for product_media in product.media -%}
            <li class="splide__slide">
              <img src="{{ product_media.preview_image | image_url: width: 700 }}" alt="{{ product_media.alt }}">
            </li>
          {%- endfor -%}
        </ul>
      </div>
    </section>

    <ul id="thumbnails" class="thumbnails">
      {%- for product_media in product.media -%}
        <li class="thumbnail">
          <img src="{{ product_media.preview_image | image_url: width: 700 }}" alt="{{ product_media.alt }}">
        </li>
      {%- endfor -%}
    </ul>
  </div>

  <!-- Right Pane: Info -->
  <div class="product-details">
    <h1 class="product-title">{{ product.title }}</h1>
    <p id="price" class="product-price">{{ product.price | money_with_currency }}</p>
    <div class="product-description">
      {{ product.description }}
    </div>

    <div class="variant-selector">
      {% for option in product.options_with_values -%}
        <fieldset>
          <legend>{{ option.name }}</legend>

          {%- for value in option.values -%}
            <label for="{{ option.name }}-{{ value.name }}">
              <input
                type="radio"
                name="{{ option.name }}"
                {% if value.selected %}
                  checked
                {% endif %}
                value="{{ value.name }}"
                id="{{ option.name }}-{{ value.name }}"
              >
              {{ value.name }}
            </label>
          {%- endfor -%}
        </fieldset>
      {%- endfor %}
    </div>

    {% form 'product', product %}
      <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

      {% render 'qty' %}

      <button type="submit" class="add-to-cart">Add to Cart</button>
    {% endform %}
  </div>
</div>

<script data-product-variants>
  {{- product.variants | json -}}
</script>

<script>
  const variants = JSON.parse(document.querySelector('[data-product-variants]').innerHTML);
  document.addEventListener("DOMContentLoaded", () => {
    onVariantChange();
  });

  document.querySelectorAll(".variant-selector input").forEach(input => {
    input.addEventListener("change", (e) => {
        onVariantChange();
    })
  })

  async function onVariantChange() {
    let option1 = null;
    let option2 = null;
    let option3 = null;
    document.querySelectorAll("input[type='radio']:checked").forEach((selectedInput, idx) => {
      if (idx == 0) option1 = selectedInput.value;
      if (idx == 1) option2 = selectedInput.value;
      if (idx == 2) option3 = selectedInput.value;
    });
    const selectedVariant = variants.find(variant => variant.option1 == option1 && variant.option2 == option2 && variant.option3 == option3);
    console.log('selected values: ', selectedVariant);
    const variantId = selectedVariant.id;

    document.querySelector("[name='id']").value = variantId
    updateVariantInURL(variantId);

    const url = `{{ product.handle }}?variant=${variantId}&section_id=updated-product`;
    const response = await fetch(url);
    if (!response.ok) throw new Error('Failed to fetch updated product data');

    const html = await response.text();
    const parser = new DOMParser();
    const dom = parser.parseFromString(html, 'text/html');
    document.querySelector('#price').innerHTML = dom.querySelector('#price').innerHTML;
  }

  function updateVariantInURL(variantId) {
    const url = new URL(window.location.href);
    url.searchParams.set("variant", variantId);
    window.history.replaceState({}, "", url);
  }
</script>

<script>
  document.querySelector("[action='/cart/add']").addEventListener('submit', (e) => {
    e.preventDefault();

    let addToCartForm = document.querySelector('form[action$="/cart/add"]');
    let formData = new FormData(addToCartForm);

    formData.append('sections', 'cart-drawer');

    fetch(window.Shopify.routes.root + 'cart/add.js', {
      method: 'POST',
      body: formData,
    })
      .then((response) => {
        document.dispatchEvent(new CustomEvent('product:added'));
        document.dispatchEvent(new CustomEvent('refresh:cart'));
      })
      .catch((error) => {
        console.error('Error:', error);
      });
  });
</script>

<script>
  var splide = new Splide('#main-slider', {
    width: 600,
    height: 300,
    pagination: false,
    cover: true,
  });

  var thumbnails = document.getElementsByClassName('thumbnail');
  var current;

  for (var i = 0; i < thumbnails.length; i++) {
    initThumbnail(thumbnails[i], i);
  }

  function initThumbnail(thumbnail, index) {
    thumbnail.addEventListener('click', function () {
      splide.go(index);
    });
  }

  splide.on('mounted move', function () {
    var thumbnail = thumbnails[splide.index];

    if (thumbnail) {
      if (current) {
        current.classList.remove('is-active');
      }

      thumbnail.classList.add('is-active');
      current = thumbnail;
    }
  });

  splide.mount();
</script>

<style>
  .product-page {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 40px;
    padding: 40px;
    max-width: 1200px;
    margin: 0 auto;
    box-sizing: border-box;
  }

  .main-image {
    width: 100%;
    height: auto;
    border-radius: 8px;
  }

  .thumbnail-gallery {
    display: flex;
    gap: 10px;
    margin-top: 15px;
  }

  .thumbnail-gallery img {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border: 1px solid #ddd;
    border-radius: 6px;
    cursor: pointer;
  }

  .product-details {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
  }

  .product-title {
    font-size: 2rem;
    margin-bottom: 10px;
  }

  .product-price {
    font-size: 1.5rem;
    color: #e60023;
    margin-bottom: 20px;
  }

  .product-description {
    font-size: 1rem;
    line-height: 1.6;
    margin-bottom: 30px;
  }

  .variant-selector {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .add-to-cart {
    padding: 14px 24px;
    font-size: 1rem;
    background-color: #000;
    color: #fff;
    border: none;
    border-radius: 6px;
    width: 100%;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .add-to-cart:hover {
    background-color: #333;
  }

  /* Responsive for smaller screens */
  @media (max-width: 768px) {
    .product-page {
      flex-direction: column;
    }

    .product-images,
    .product-details {
      flex: 1 1 100%;
    }

    .thumbnail-gallery {
      justify-content: flex-start;
    }
  }
</style>
